#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.
#
##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	xorq %rax,%rax		# count = 0;

	jmp TestK
	mrmovq (%rdi), %r8
LoopK:
	mrmovq 8(%rdi), %r9
	mrmovq 16(%rdi), %r10
	mrmovq 24(%rdi), %r11
	mrmovq 32(%rdi), %r12
	mrmovq 40(%rdi), %r13
	andq %r8, %r8
	rmmovq %r13, 40(%rsi)
	jle Npos0
	iaddq $1, %rax
Npos0:
	andq %r9, %r9
	rmmovq %r8, (%rsi)
	jle Npos1
	iaddq $1, %rax
Npos1:
	andq %r10, %r10
	rmmovq %r9, 8(%rsi)
	jle Npos2
	iaddq $1, %rax
Npos2:
	andq %r11, %r11
	rmmovq %r10, 16(%rsi)
	jle Npos3
	iaddq $1, %rax
Npos3:
	andq %r12, %r12
	rmmovq %r11, 24(%rsi)
	jle Npos4
	iaddq $1, %rax
Npos4:
	andq %r13, %r13
	rmmovq %r12, 32(%rsi)
	jle Npos5
	iaddq $1, %rax
Npos5:
	iaddq $48, %rdi		# src++
	iaddq $48, %rsi		# dst++
TestK:
	iaddq $-6, %rdx		# len--
	mrmovq (%rdi), %r8
	jge LoopK
	iaddq $6, %rdx
	mrmovq (%rdi), %r10	# read val from src...

	jle Done:
Loop:	
	iaddq $8, %rdi		# src++
	rmmovq %r10, (%rsi)	# ...and store it to dst
	andq %r10, %r10		# val <= 0?
	jle Npos		# if so, goto Npos:
	iaddq $1, %rax		# count++
Npos:
	iaddq $8, %rsi		# dst++
Test:
	iaddq $-1, %rdx		# len--
	mrmovq (%rdi), %r10	# read val from src...
	jg Loop			# if so, goto Loop:
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
