
# Execution begins at address 0 
	.pos 0
	irmovq stack, %rsp  	# Set up stack pointer
    irmovq ele1, %rdi
    call rsum_list
	halt			# Terminate program 

# Sample linked list
.align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0

# long sum_list(list_ptr ls)
# ls in %rdi
rsum_list:   
    pushq %rbx
	andq %rdi,%rdi
    jne L1
    xorq %rax,%rax
    jmp L2 
L1:
    mrmovq (%rdi),%rbx
    irmovq $8,%r8        # Constant 8
    addq %r8,%rdi
    mrmovq (%rdi),%rdi
    call rsum_list
    addq %rbx,%rax
L2:
    popq %rbx
    ret

# Stack starts here and grows to lower addresses
	.pos 0x200
stack:
