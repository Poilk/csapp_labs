
# Execution begins at address 0 
	.pos 0
	irmovq stack, %rsp  	# Set up stack pointer
    irmovq ele1, %rdi
    call sum_list
	halt			# Terminate program 

# Sample linked list
.align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0

# long sum_list(list_ptr ls)
# ls in %rdi
sum_list:   irmovq $8,%r8        # Constant 8
	xorq %rax,%rax	     # val = 0
	andq %rdi,%rdi	     # Set CC
	jmp     test         # Goto test
loop:	mrmovq (%rdi),%r10   # Get *start
	addq %r10,%rax       # Add to sum
    addq %r8,%rdi
    mrmovq (%rdi),%rdi  
    andq %rdi,%rdi       # Set CC
test:	jne    loop          # Stop when 0
	ret                  # Return

# Stack starts here and grows to lower addresses
	.pos 0x200
stack:
